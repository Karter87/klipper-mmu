# IMPORT HELPERS/....
# # Helpers are _ macro's 
# # __ macro's are reserved for sub-helpers

# MMU COMMAND=[START|STOP|PAUSE|STATUS|SAVE|RESET|LOAD|UNLOAD] [FILAMENT=[1|2|3|4|5]]

# FILAMENT COMMAND=[LOAD|UNLOAD|TEST] LOCA..

# Type of objects:
# - Filament (Types)
# - MMU (Spool selection)

[include helper/mmu.cfg]

[gcode_macro MMU]
description: Control the MMU
gcode:
    {% set cmd = params.COMMAND|lower %}
    {% set spool = params.SPOOL|default(-1) %}


    {% if cmd == 'start' %}
        _MMU_START
    {% elif cmd == 'stop' %}
        _MMU_STOP
    {% elif cmd == 'status' %}
        _MMU_STATUS
    {% elif cmd == 'reset' %}
        _MMU_RESET
    {% elif cmd == 'load' %}
        _MMU_LOAD
    {% elif cmd == 'unload' %}
        _MMU_UNLOAD
    {% elif cmd == 'change' %}
        _MMU_CHANGE SPOOL={params.SPOOL}
    {% else %}
        RESPOND TYPE=error MSG='Command not found, please use MMU COMMAND=[start|stop|pause|reset]'
    {% endif %}

######################
# Commands
######################
    
[gcode_macro _MMU_START]
gcode:
	{% set filament_selected = printer.save_variables.variables.filament_selected %}

    # Check if filament is known (not -1), and save to gcode
    {% if filament_selected != -1 %}
        {% set selector_position = printer["gcode_macro _MMU_Settings"].selector_positions[filament_selected - 1] %}
    {% else %}
        {% set selector_position = -1 %}
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=filament_selected VALUE={filament_selected}
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=selector_position VALUE={selector_position}
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=status VALUE=1

[gcode_macro _MMU_STOP]
description: Stop MMU 
gcode:
    RESPOND TYPE=echo MSG='Stopping'
    # STOP STEPPERS
    MANUAL_STEPPER STEPPER=gear ENABLE=0
    MANUAL_STEPPER STEPPER=idler ENABLE=0
    MANUAL_STEPPER STEPPER=selector ENABLE=0
    
    #SAVE_VARIABLE VARIABLE=filament_selected VALUE=-1
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=status VALUE=0

[gcode_macro _MMU_STATUS]
gcode:
    {% if printer["gcode_macro _MMU"].status != 1 %}
        M118 MMU NOT YET STARTED, will do so when I feel for it
        _MMU_START
    {% else %}
        _MMU
    {% endif %}


[gcode_macro _MMU_PAUSE]
gcode:
    RESPOND TYPE=echo MSG='PAUSING'
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=status VALUE=9

[gcode_macro _MMU_RESET]
gcode:
    RESPOND TYPE=echo MSG='Resetting'

[gcode_macro _MMU_LOAD]
gcode:
    RESPOND TYPE=echo MSG='Loading'

[gcode_macro _MMU_UNLOAD]
gcode:
    RESPOND TYPE=echo MSG='Unloading'

[gcode_macro _MMU_CHANGE]
gcode:
    _MMU_STATUS
    _MOVE_SELECTOR SPOOL={params.SPOOL}
    #_MOVE_IDLER SPOOL={spool}






# Home the idler
[gcode_macro HOME_IDLER]
description: Home the MMU3 IDLER
gcode:
    {% set idler_park = printer["gcode_macro _MMU_Settings"].idler_positions[-1]  %}

   	MANUAL_STEPPER STEPPER=idler SET_POSITION=0
    MANUAL_STEPPER STEPPER=idler MOVE=-3 SPEED=10
    MANUAL_STEPPER STEPPER=idler MOVE=85 SPEED=10 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=idler SET_POSITION=83
	MANUAL_STEPPER STEPPER=idler MOVE=-0.5 STOP_ON_ENDSTOP=2
    MANUAL_STEPPER STEPPER=idler MOVE={idler_park}
    
    # Update _ULTIMULTI Volatile Data
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=idler_homed VALUE=True
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=idler_position VALUE={idler_park}
	RESPOND PREFIX='IDLER: ' TYPE=command MSG="HOMED"

[gcode_macro HOME_SELECTOR]
description: Home the MMU3 Filament Selector
gcode:
    {% set selector_zero = printer["gcode_macro _MMU_Settings"].selector_positions[0]  %}

	MANUAL_STEPPER STEPPER=selector SET_POSITION=0
	MANUAL_STEPPER STEPPER=selector SPEED=10 MOVE=-80 STOP_ON_ENDSTOP=1
	MANUAL_STEPPER STEPPER=selector SET_POSITION=-1.5
	MANUAL_STEPPER STEPPER=selector MOVE={selector_zero}
    
 #   _UPDATE_FILAMENT SELECTED=1

    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=selector_homed VALUE=True
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=selector_position VALUE={selector_zero}
	RESPOND PREFIX='SELECTOR: ' TYPE=command MSG="HOMED"

[gcode_macro DUMP_MMU]
description: Read and display MMU settings and status
gcode:
	{% set mmu = printer["gcode_macro _MMU"] %}
	{% set settings = printer["gcode_macro _MMU_Settings"] %}
	{% set filament = printer["gcode_macro _Filament"] %}
	{% set svv = printer.save_variables.variables %}
    
    RESPOND TYPE=command MSG="mmu : {mmu}"
    RESPOND TYPE=command MSG="settings : {settings}"
    RESPOND TYPE=command MSG="filament : {filament}"
    RESPOND TYPE=command MSG="nvdata : {svv}"

    {% if settings.verbose_enable%}

        {% for key, value in settings.items() %}
            RESPOND PREFIX='settings: ' TYPE=command MSG="{key} : {value}"
        {% endfor %}

        {% for key, value in mmu.items() %}
            RESPOND PREFIX='mmu: ' TYPE=command MSG="{key} : {value}"
        {% endfor %}

        {% for key, value in filament.items() %}
            RESPOND PREFIX='filament: ' TYPE=command MSG="{key} : {value}"
        {% endfor %}

        {% for key, value in svv.items() %}
            RESPOND PREFIX='nvdata: ' TYPE=command MSG="{key} : {value}"
        {% endfor %}

	{% endif %}

[gcode_macro _MMU_RESET]
description: Reset MMU3 Ultimulti persistent data
gcode:
	RESPOND TYPE=command MSG="mmu : Resetting Non Volatile data and restart soon"
    _MMU_RESET
    FIRMWARE_RESTART

[gcode_macro __MMU_RESET]
description: Reset MMU3 Ultimulti persistent data
gcode:
    SAVE_VARIABLE VARIABLE=filament_selected VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_1 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_2 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_3 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_4 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_5 VALUE=-1

[gcode_macro T0]
description: Change to Spool 1
gcode:
	MMU COMMAND=change SPOOL=1

[gcode_macro T1]
description: Change to Spool 2
gcode:
	MMU COMMAND=change SPOOL=2

[gcode_macro T2]
description: Change to Spool 3
gcode:
	MMU COMMAND=change SPOOL=3

[gcode_macro T3]
description: Change to Spool 4
gcode:
	MMU COMMAND=change SPOOL=4

[gcode_macro T4]
description: Change to Spool 5
gcode:
	MMU COMMAND=change SPOOL=5
