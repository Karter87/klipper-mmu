# Configuration for Ultimulti MMU3 with a SKR Pico
# Charlie van der Schoor (karter87@Github)
# More info for Ultimulti MMU3: 
# https://www.printables.com/model/537888-mmu3-ultimulti-printable-parts
#

# Load the mcu with pins
[include board/skr_pico-1.2.cfg]

#TODO: Check if needed in this script
[respond]
default_type: command

########
# Macro's
########
# Load homing
[include macros/homing.cfg]

# Load filament related macro's e.g. loading, unloading. 
[include macros/filament.cfg]
	
################################
#
#  PARAMETER TO ADAPT TO YOUR SETUP
#
# variable_timeout_pause         : timeout of the MMU2S pause when user intervention is needed
# variable_disable_heater        : timeout of the heater during pause (temperature is saved and restored before resuming)
# variable_bowden_load_length1   : length of the bowden between the selector and the entry of the extruder (quick MOVE)
# variable_bowden_load_length2   : length of the bowden between the entry of the extruder and the extruder gear (slow MOVE)
# variable_bowden_unload_length  : length between the the extruder gear and the FINDA
# variable_finda_load_length     : length between the MMU2S and the FINDA during loading
# variable_finda_unload_length   : length to retract the filament into the MMU2S from the FINDA during unloading
# variable_colorselector         : the 5 positions of the color selector
# variable_idler                 : the 5 positions of the idler bearing ball
# variable_idler_home_position   : the homing position of the idler
# variable_min_temp_extruder     : minimal required heater temperature to load/unload filament from the extruder gear to the nozzle
# variable_extruder_eject_temp   : heater temperature used to eject filament during home if the filament is already loaded
# variable_enable_5in1           : pass from MMU2S standart (0) to MMU2S-5in1 mode with splitter
#
################################
[gcode_macro _ULTIMULTI_Settings]
description: This macro contains all adjustable settings 

variable_extruder_load_length: 150
variable_extruder_unload_length: 830
variable_finda_load_length: 120
variable_finda_unload_length: 25
variable_filaments = [1,2,3,4,5]
variable_selector_positions = [0,14,28,42,56]
variable_idler_positions = [4,22,34,48,63]
variable_idler_park: 80
variable_enable_5in1: 0
gcode:
    {action_respond_info(" Running the _ULTIMULTI_Settings macro does nothing, it is only used for storing settings. ")}
# TODO Add Sanity check macro for INITIALIZATION


###################
# Variable Status: 
###################
# -1 is unknown 
# 0 is false
# 1 is true

[gcode_macro _ULTIMULTI]
description: MMU3 Ultimulti object, not callable. 

variable_persistent_loaded: -1

variable_filament_selected: -1

variable_filament_loaded_1: -1
variable_filament_loaded_2: -1
variable_filament_loaded_3: -1
variable_filament_loaded_4: -1
variable_filament_loaded_5: -1

variable_idler_homed: -1
variable_idler_position: -1

variable_selector_position: -1

variable_extruder_loaded: -1
variable_finda_loaded: -1

variable_paused: -1

gcode:
    M118 finda_loaded: {printer["gcode_macro _ULTIMULTI"].finda_loaded}
    M118 extruder_loaded: {printer["gcode_macro _ULTIMULTI"].extruder_loaded}
    M118 filament_loaded_1: {printer["gcode_macro _ULTIMULTI"].filament_loaded_1}
    M118 filament_loaded_2: {printer["gcode_macro _ULTIMULTI"].filament_loaded_2}
    M118 filament_loaded_3: {printer["gcode_macro _ULTIMULTI"].filament_loaded_3}
    M118 filament_loaded_4: {printer["gcode_macro _ULTIMULTI"].filament_loaded_4}
    M118 filament_loaded_5: {printer["gcode_macro _ULTIMULTI"].filament_loaded_5}
    M118 filament_selected: {printer["gcode_macro _ULTIMULTI"].filament_selected}

    
[gcode_macro _ULTIMULTI_STATUS]
gcode:
    {% if printer["gcode_macro _ULTIMULTI"].persistent_loaded == -1 %}
        _ULTIMULTI_RESTORE 
    {% endif %}
    
    # Check endstop statuses
    _UPDATE_ENDSTOPS    
    __ULTIMULTI_STATUS
    
[gcode_macro __ULTIMULTI_STATUS]
description: Get Ultimulti STATUS
gcode:
	{% set svv = printer.save_variables.variables %}
    {% set persistent_loaded = printer["gcode_macro _ULTIMULTI"].persistent_loaded %}

    {% set filament_loaded_1 = printer["gcode_macro _ULTIMULTI"].filament_loaded_1 %}
    {% set filament_loaded_2 = printer["gcode_macro _ULTIMULTI"].filament_loaded_2 %}
    {% set filament_loaded_3 = printer["gcode_macro _ULTIMULTI"].filament_loaded_3 %}
    {% set filament_loaded_4 = printer["gcode_macro _ULTIMULTI"].filament_loaded_4 %}
    {% set filament_loaded_5 = printer["gcode_macro _ULTIMULTI"].filament_loaded_5 %}
    {% set filament_selected = printer["gcode_macro _ULTIMULTI"].filament_selected %}
 
    {% set finda_loaded = printer["gcode_macro _ULTIMULTI"].finda_loaded %}
    {% set extruder_loaded = printer["gcode_macro _ULTIMULTI"].extruder_loaded %}

    {% set idler_homed = printer["gcode_macro _ULTIMULTI"].idler_homed %}
    {% set idler_position = printer["gcode_macro _ULTIMULTI"].idler_position %}
    # MANUAL_STEPPER STEPPER=idler SET_POSITION={idler_position} 
    
    {% set selector_position = printer["gcode_macro _ULTIMULTI"].selector_position %}
    MANUAL_STEPPER STEPPER=selector SET_POSITION={selector_position} 

    {% if svv.debug == True %}
        M118 DEBUG: extruder_loaded: {extruder_loaded}
        M118 DEBUG: finda_loaded: {finda_loaded}
        M118 DEBUG: filament_loaded_1: {filament_loaded_1}
        M118 DEBUG: filament_loaded_2: {filament_loaded_2}
        M118 DEBUG: filament_loaded_3: {filament_loaded_3}
        M118 DEBUG: filament_loaded_4: {filament_loaded_4}
        M118 DEBUG: filament_loaded_5: {filament_loaded_5}
        M118 DEBUG: filament_selected: {filament_selected}
        M118 DEBUG: selector_position: {selector_position} mm
        M118 DEBUG: idler_position: {idler_position} mm
        M118 DEBUG: idler_homed: {idler_homed}
        M118 DEBUG: persistent_loaded: {persistent_loaded}
    {% endif %} 

[gcode_macro _ULTIMULTI_RESTORE]
gcode:
	{% set filament_selected = printer.save_variables.variables.filament_selected %}

    # Check if filament is known (not -1), and save to gcode
    {% if filament_selected != -1 %}
        {% set selector_position = printer["gcode_macro _ULTIMULTI_Settings"].selector_positions[filament_selected - 1] %}
    {% else %}
        {% set selector_position = -1 %}
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=filament_selected VALUE={filament_selected}
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=selector_position VALUE={selector_position}
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=persistent_loaded VALUE=1
    
[gcode_macro ULTIMULTI_RESET]
description: Reset MMU3 Ultimulti persistent data
gcode:
    M118 INFO: Resetting save_variables settings and restart
    SAVE_VARIABLE VARIABLE=filament_selected VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_1 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_2 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_3 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_4 VALUE=-1
    SAVE_VARIABLE VARIABLE=filament_loaded_5 VALUE=-1
    FIRMWARE_RESTART



########################
# Update Ultimulti
########################

[gcode_macro _UPDATE_IDLER]
gcode:
    {% set position = params.POSITION|default(-1)|int %}
    # Update Ultimulti object  
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=idler_position VALUE={position}

[gcode_macro _UPDATE_SELECTOR]
gcode:
    {% set position = params.POSITION|default(-1)|int %}
    # Update Ultimulti object
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=selector_position VALUE={position}

[gcode_macro _UPDATE_FILAMENT]
gcode:
    {% set selected = params.SELECTED|default(-1)|int %}
    # Update Ultimulti object
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=filament_selected VALUE={selected}
    SAVE_VARIABLE VARIABLE=filament_selected VALUE={selected}
    
# Call PAUSE_MMU if the filament is not detected by the FINDA
[gcode_macro _UPDATE_ENDSTOPS]
gcode:
    QUERY_ENDSTOPS
    __UPDATE_ENDSTOPS

[gcode_macro __UPDATE_ENDSTOPS]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper gear"] == 1 %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=finda_loaded VALUE=1
    {% else %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=finda_loaded VALUE=0
    {% endif %}
    
    {% if printer["filament_switch_sensor filament"].filament_detected == True %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=extruder_loaded VALUE=1
    {% else %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=extruder_loaded VALUE=0
    {% endif %}

######################
# MOVE Macro's
######################

[gcode_macro _MOVE_IDLER]
gcode:
    # Get ARGS
    {% set filament = params.FILAMENT|default(-1)|int %}

    # Load variables
    {% set svv = printer.save_variables.variables %}
    
    # Load Settings 
    {% set filaments = printer["gcode_macro _ULTIMULTI_Settings"].filaments %} 
    {% set idler_positions = printer["gcode_macro _ULTIMULTI_Settings"].idler_positions %}
    {% set idler_park = printer["gcode_macro _ULTIMULTI_Settings"].idler_park %}

    # Load Status
    {% set filament_selected = printer["gcode_macro _ULTIMULTI"].filament_selected %}
    {% set idler_homed = printer["gcode_macro _ULTIMULTI"].idler_homed %}

    # Check if homed
    {% if idler_homed != 1 %}
        HOME_IDLER
    {% endif %}
     
    # 0 is park position for IDLER
    {% if filament == 0 %}
        {% if svv.debug == True %}
            M118 DEBUG: IDLER PARK pos={idler_park}
        {% endif %}
        
        MANUAL_STEPPER STEPPER=idler MOVE={idler_park}
        _UPDATE_IDLER POSITION={idler_park}
    {% elif filament in filaments %}
        {% if svv.debug == True %}
            M118 DEBUG: IDLER Filament {filament}: pos={idler_positions[filament - 1]}
        {% endif %}

        MANUAL_STEPPER STEPPER=idler MOVE={idler_positions[filament - 1 ]}
        _UPDATE_IDLER POSITION={idler_positions[filament - 1 ]}
    {% else %}
        M118 ERROR: Please select the correct position, e.g. MOVE_IDLER FILAMENT=<1|2|3|4|5|0>
    {% endif %}   

[gcode_macro _MOVE_SELECTOR]
gcode:
    # Get ARGS
    {% set filament = params.FILAMENT|default(-1)|int %}

    _ULTIMULTI_STATUS
    __MOVE_SELECTOR FILAMENT={filament}
    
[gcode_macro __MOVE_SELECTOR]
gcode:
    # Get ARGS
    {% set filament = params.FILAMENT|default(-1)|int %}

    # Load Variables
    {% set svv = printer.save_variables.variables %}

    # Load Settings 
    {% set filaments = printer["gcode_macro _ULTIMULTI_Settings"].filaments %} 
    {% set selector_positions = printer["gcode_macro _ULTIMULTI_Settings"].selector_positions %}

    # Load Status
    {% set filament_selected = printer["gcode_macro _ULTIMULTI"].filament_selected %}    
    {% set finda_loaded = printer["gcode_macro _ULTIMULTI"].finda_loaded %}
    
    # Check if SELECTOR has filament loaded
    {% if finda_loaded == 1 %}
        UNLOAD_FILAMENT
    {% endif %}
        
    # Check if homed
    {% if filament_selected == -1 %}
        HOME_SELECTOR
    {% endif %}

    # Move commando's
    {% if filament in filaments %}
        {% if svv.debug == True %}
            M118 DEBUG: SELECTOR Filament {filament}: pos={selector_positions[filament - 1]}
        {% endif %}
      
        MANUAL_STEPPER STEPPER=selector MOVE={selector_positions[filament - 1 ]}
        _UPDATE_SELECTOR POSITION={selector_positions[filament - 1]}
        _UPDATE_FILAMENT SELECTED={filament}
    {% else %}
        M118 ERROR: Please select the correct filament, e.g. MOVE_SELECTOR FILAMENT=<1|2|3|4|5>
    {% endif %}   
    
# Home the idler
[gcode_macro HOME_IDLER]
description: Home the MMU3 IDLER
gcode:
    {% set idler_park = printer["gcode_macro _ULTIMULTI_Settings"].idler_park %}

    M118 INFO: IDLER HOMING
	MANUAL_STEPPER STEPPER=idler SET_POSITION=0
    MANUAL_STEPPER STEPPER=idler MOVE=-3 SPEED=10
    MANUAL_STEPPER STEPPER=idler MOVE=85 SPEED=10 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=idler SET_POSITION=83
	MANUAL_STEPPER STEPPER=idler MOVE=-0.5 STOP_ON_ENDSTOP=2
    MANUAL_STEPPER STEPPER=idler MOVE={idler_park}
    
    # Update _ULTIMULTI Volatile Data
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=idler_homed VALUE=1
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=idler_position VALUE={idler_park}
	M118 INFO: IDLER HOMED

[gcode_macro HOME_SELECTOR]
description: Home the MMU3 Filament Selector
gcode:
    M118 INFO: SELECTOR HOMING
	MANUAL_STEPPER STEPPER=selector SET_POSITION=0
	MANUAL_STEPPER STEPPER=selector SPEED=10 MOVE=-80 STOP_ON_ENDSTOP=1
	MANUAL_STEPPER STEPPER=selector SET_POSITION=-1.5
	MANUAL_STEPPER STEPPER=selector MOVE=0
    
    _UPDATE_FILAMENT SELECTED=1

	M118 INFO: SELECTOR HOMED 


#################
# TEST PARTS
#################
   
[gcode_macro TEST_FIL]
gcode:
    {% set filament = params.FIL|default(0)|int %}
	_MOVE_SELECTOR FILAMENT={filament}
	_MOVE_IDLER FILAMENT={filament}
