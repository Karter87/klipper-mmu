
#####################
### LOAD MACROS
#####################
    
[gcode_macro _LOAD_MMU]
gcode:
    {% set endstop = params.STOP_ON_ENDSTOP|default(1)|int %}
	{% set finda_load_length = printer["gcode_macro _ULTIMULTI_Settings"].finda_load_length %}
	MANUAL_STEPPER STEPPER=gear SET_POSITION=0 
	MANUAL_STEPPER STEPPER=gear MOVE={finda_load_length} STOP_ON_ENDSTOP={endstop} 
    
[gcode_macro _LOAD_EXTRUDER]
gcode:
	{% set extruder_load_length = printer["gcode_macro _ULTIMULTI_Settings"].extruder_load_length %}
	MANUAL_STEPPER STEPPER=gear SET_POSITION=0 	
	MANUAL_STEPPER STEPPER=gear MOVE={extruder_load_length}
    
[gcode_macro LOAD_FILAMENT]
gcode:
    # Check if loaded
    {% if printer["gcode_macro _ULTIMULTI"].persistent_loaded != 1 %}
        {% set filament_selected = printer.save_variables.variables.filament_selected %}        
    {% else %}
        {% set filament_selected = printer["gcode_macro _ULTIMULTI"].filament_selected %}
    {% endif %}

	_MOVE_IDLER FILAMENT={filament_selected}
    _LOAD_MMU
    _LOAD_EXTRUDER
	_MOVE_IDLER FILAMENT=0

#####################
### UNLOAD MACROS
#####################

[gcode_macro _UNLOAD_MMU]
gcode:
	{% set finda_unload_length = printer["gcode_macro _ULTIMULTI_Settings"].finda_unload_length %}
	MANUAL_STEPPER STEPPER=gear SET_POSITION=0 	
	MANUAL_STEPPER STEPPER=gear MOVE=-{finda_unload_length}
    
[gcode_macro _UNLOAD_EXTRUDER]
gcode:
	{% set extruder_unload_length = printer["gcode_macro _ULTIMULTI_Settings"].extruder_unload_length %}
	MANUAL_STEPPER STEPPER=gear SET_POSITION=0 
	MANUAL_STEPPER STEPPER=gear MOVE=-{extruder_unload_length} STOP_ON_ENDSTOP=-1 
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    _ULTIMULTI_STATUS
    _UNLOAD_FILAMENT

[gcode_macro _UNLOAD_FILAMENT]
gcode:
    # Check if loaded
    {% set filament_selected = printer["gcode_macro _ULTIMULTI"].filament_selected %}
    
	_MOVE_IDLER FILAMENT={filament_selected}
    _UNLOAD_EXTRUDER
    _UNLOAD_MMU
	_MOVE_IDLER FILAMENT=0

#####################################
### UPDATE FILAMENT STATUS MACROS
#####################################

[gcode_macro _UPDATE_LOADED_FILAMENTS]
gcode:
    {% set selected = params.SELECTED|default(-1)|int %}
    # Update Ultimulti object
    SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=filament_selected VALUE={selected}
    SAVE_VARIABLE VARIABLE=filament_selected VALUE={selected}


[gcode_macro CHECK_FILAMENTS_LOADED]
gcode:
    {% set filaments = [1,2,3,4,5] %}
    {% for filament in filaments %}
        M118 Testing Filament : {filament}
        TEST_FIL FIL={filament}
        _LOAD_MMU STOP_ON_ENDSTOP=2
        _ULTIMULTI_STATUS
        _CHECK_FILAMENTS_LOADED FILAMENT={filament}
        _UNLOAD_MMU   
    {% endfor %}
    # LOAD_FILAMENT
    # UNLOAD_FILAMENT
    
[gcode_macro _CHECK_FILAMENTS_LOADED]
gcode:
    {% set filament = params.FILAMENT|default(-1)|int %}
    {% if printer["gcode_macro _ULTIMULTI"].finda_loaded == 1 %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=filament_loaded_{filament} VALUE=1
    {% else %}
        SET_GCODE_VARIABLE MACRO=_ULTIMULTI VARIABLE=filament_loaded_{filament} VALUE=0
    {% endif %}
    M118 INFO: Filaments Checked

# # # Select a tool. move the idler and then move the color selector (if needed)
# # [gcode_macro SELECT_TOOL]
# # variable_tool_selected: -1
# # variable_color_selected: -1
# # gcode:
	# # {% set svv = printer.save_variables.variables %}
    # # {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
		# # {% if printer["gcode_macro HOME_MMU"].home != -1 %}
			# # M118 Select Tool {params.VALUE} ...
			# # MANUAL_STEPPER STEPPER=idler MOVE={printer["gcode_macro _ULTIMULTI_Settings"].idler[params.VALUE|int]}
			# # {% if printer["gcode_macro _ULTIMULTI_Settings"].enable_5in1 == 0 %}
			# # MANUAL_STEPPER STEPPER=selector MOVE={printer["gcode_macro _ULTIMULTI_Settings"].colorselector[params.VALUE|int]}
			# # {% endif %}
			# # SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE={params.VALUE}
			# # SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE={params.VALUE}
			# # M118 Tool {params.VALUE} Enabled
		# # {% else %}
			# # M118 Could not select tool, MMU is not homed
		# # {% endif %}
    # # {% endif %}

############################################
#
# M702 macro called by the end-gcode to eject the filament at the end of the print
#
############################################

# # Eject the filament with ramming from the extruder nozzle to the MMU2S
# [gcode_macro EJECT_RAMMING]
# gcode:
    # {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
    # {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != -1 %}
    # M118 UT {printer["gcode_macro SELECT_TOOL"].color_selected|int} ...
    # UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING
    # SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
    # UNLOAD_FILAMENT_FROM_EXTRUDER
    # {% endif %}
    # {% endif %}

# # M702 first part
# # unload filament if inserted into the IR sensor
# [gcode_macro M702]
# gcode:
    # UT
    # QUERY_ENDSTOPS
    # END_M702

# # M702 second part
# # Unselect the current tool
# [gcode_macro END_M702]
# gcode:
    # {% if printer["gcode_macro _ULTIMULTI_Settings"].enable_5in1 == 0 %}
    # {% if printer.query_endstops.last_query["manual_stepper gear"] != 1 %}
        # UNSELECT_TOOL
        # M118 M702 ok ...
    # {% else %}
        # M118 M702 Error !!!
    # {% endif %}
    # {% else %}
    # UNSELECT_TOOL
    # SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
    # M118 M702 ok ...
    # {% endif %}
    

###############################
#
# PAUSE MACROS
# PAUSE_MMU is called when an human intervention is needed
# use MMU_UNLOCK to park the idler and start the manual intervention
# and use RESUME when the invention is ended to resume the current print
#
###############################


# # park the idler, stop the delayed stop of the heater
# [gcode_macro MMU_UNLOCK]
# gcode:
   # M118 Resume print
   # SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=0
   # UPDATE_DELAYED_GCODE ID=disable_heater DURATION=0
   # HOME_IDLER
   # M109 S{printer["gcode_macro PAUSE_MMU"].extruder_temp}


# # Pause the MMU, park the extruder at the parking position
# # Save the current state and start the delayed stop of the heated
# # modify the timeout of the printer acorrdly to timeout_pause
# [gcode_macro PAUSE_MMU]
# variable_is_paused: 0
# variable_extruder_temp: 0
# gcode:
    # SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=extruder_temp VALUE={printer.extruder.temperature}
    # SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=1
    # SAVE_GCODE_STATE NAME=PAUSE_MMU_state
    # SET_IDLE_TIMEOUT TIMEOUT={printer["gcode_macro _ULTIMULTI_Settings"].timeout_pause}
    # UPDATE_DELAYED_GCODE ID=disable_heater DURATION={printer["gcode_macro _ULTIMULTI_Settings"].disable_heater}
    # M118 START PAUSE
    # # BEEP
    # # BEEP
    # # BEEP
    # PAUSE
    # G91
    # G1 Z{printer["gcode_macro _ULTIMULTI_Settings"].pause_z}
    # G90
    # G1 X{printer["gcode_macro _ULTIMULTI_Settings"].pause_x} Y{printer["gcode_macro _ULTIMULTI_Settings"].pause_y} F3000
    # # BEEP
    # # BEEP
    # # BEEP
    # M118 END PAUSE
    # RESTORE_GCODE_STATE NAME=PAUSE_MMU_state

	