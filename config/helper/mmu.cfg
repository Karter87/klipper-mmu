######################
# Objects
######################

[gcode_macro _MMU]
description: MMU Object containing status 

variable_filament_selected: -1
variable_extruder_loaded: -1
variable_mmu_loaded: -1
variable_spool_selected: -1
variable_spool_loaded: -1

variable_idler_homed: -1
variable_idler_position: -1

variable_selector_homed: -1
variable_selector_position: -1

variable_status: -1
# -1 = unknown
#  0 = loaded 
#  1 = active
#  8 = motors off
#  9 = paused
gcode:
	{% set settings = printer["gcode_macro _MMU_Settings"] %}
	{% set mmu = printer["gcode_macro _MMU"] %}

	{% for key, value in mmu.items() %}
		RESPOND PREFIX='mmu: ' TYPE=command MSG="{key} : {value}"
	{% endfor %}

    {% if settings.verbose_enable%}
		RESPOND TYPE=command MSG="mmu : {mmu}"
	{% endif %}

######################
# Movements
######################
    
[gcode_macro _MOVE_IDLER]
gcode:
    # Get ARGS
    {% set spool = params.SPOOL | default(-1) | int %}

    # Load variables
    {% set svv = printer.save_variables.variables %}
    {% set settings = printer["gcode_macro _MMU_Settings"] %}
    {% set filaments = printer["gcode_macro _Filament_Settings"].filaments %}
    {% set mmu = printer["gcode_macro _MMU"] %}

    # Check MMU status
    _CHECK_MMU 

    # Calculate variable
    {% set idler_position = settings.idler_positions[spool - 1 ] %}

    # 0 is park position for IDLER
    {% if filament == 0 or  spool in filaments %}      
        RESPOND PREFIX='IDLER: ' TYPE=command MSG="Spool {spool} pos={idler_position}"

        MANUAL_STEPPER STEPPER=idler MOVE={idler_position}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=idler_position VALUE={idler_position}

    {% else %}
        RESPOND TYPE=error MSG="Please select the correct position, e.g. MOVE_IDLER SPOOL=<1|2|3|4|5|0>"
    {% endif %}   


[gcode_macro _MOVE_SELECTOR]
gcode:
    # Get ARGS
    {% set spool = params.SPOOL | default(-1) | int %}

    # Load variables
    {% set svv = printer.save_variables.variables %}
    {% set settings = printer["gcode_macro _MMU_Settings"] %}
    {% set filaments = printer["gcode_macro _Filament_Settings"].filaments %}
    {% set mmu = printer["gcode_macro _MMU"] %}

    # Load Settings 
    {% set selector_positions = settings.selector_positions %}

    # Load Status
    {% set spool_selected = mmu.spool_selected %}    
    {% set finda_loaded = mmu.finda_loaded %}
	
    # Check MMU status
    _CHECK_MMU 

    # Move commando's
    {% if spool in filaments %}
        RESPOND TYPE=command PREFIX="SELECTOR: " MSG="Spool {spool} (pos={selector_positions[spool - 1]})"
      
        MANUAL_STEPPER STEPPER=selector MOVE={selector_positions[spool - 1]}      
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=selector_position VALUE={selector_positions[spool - 1]}

    {% else %}
        RESPOND TYPE=error MSG="Please select the correct filament, e.g. _MOVE_SELECTOR SPOOL=<1|2|3|4|5>"
    {% endif %}   
    
[gcode_macro _UPDATE_MMU]
gcode:
    M118 UPDATE MMU NOT YET IMPLEMENTED



[gcode_macro _CHECK_MMU]
gcode:
    {% set mmu = printer["gcode_macro _MMU"] %}

    _CHECK_IDLER
    _CHECK_SELECTOR


[gcode_macro _CHECK_IDLER]
gcode:
    {% set mmu = printer["gcode_macro _MMU"] %}
    #RESPOND PREFIX='IDLER_POS' MSG={mmu.idler_position}
    
    {% if mmu.idler_position == -1 %}
        HOME_IDLER
    {% endif %}

[gcode_macro _CHECK_SELECTOR]
gcode:
    {% set mmu = printer["gcode_macro _MMU"] %}
    #RESPOND PREFIX='SELECTOR_POS' MSG={mmu.selector_position}
    
    {% if mmu.selector_position == -1 %}
        HOME_SELECTOR
    {% endif %}